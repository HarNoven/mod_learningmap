{"version":3,"sources":["../src/placestore.js"],"names":["placestore","id","places","paths","startingplaces","targetplaces","placecolor","strokecolor","visitedcolor","height","width","hidepaths","mapid","Math","floor","random","Date","now","editmode","loadJSON","json","fromjson","JSON","parse","Object","assign","buildJSON","stringify","getPlacestore","addPlace","linkId","linkedActivity","push","length","addStartingPlace","removePlace","removeStartingPlace","removeTargetPlace","filter","p","e","isStartingPlace","includes","addTargetPlace","isTargetPlace","addPath","pid","fid","sid","removePath","getTouchingPaths","getActivityId","place","setActivityId","setColor","type","color","getColor","getId","setBackgroundDimensions","getPathsWithFid","getPathsWithSid","setHidePaths","value","getHidePaths","getMapid"],"mappings":"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","sourcesContent":["let placestore = {\n    id: 0,\n    places: [],\n    paths: [],\n    startingplaces: [],\n    targetplaces: [],\n    placecolor: '#c01c28',\n    strokecolor: '#ffffff',\n    visitedcolor: '#26a269',\n    height: 100,\n    width: 800,\n    hidepaths: false,\n    mapid: Math.floor(Math.random() * Date.now()),\n    editmode: true,\n    /**\n     * Loads attributes from JSON into placestore\n     * @param {*} json\n     */\n    loadJSON: function(json) {\n        try {\n            let fromjson = JSON.parse(json);\n            Object.assign(this, fromjson);\n            // eslint-disable-next-line no-empty\n        } catch { }\n    },\n    /**\n     * Returns placestore as a JSON string ()\n     * @returns {string}\n     */\n    buildJSON: function() {\n        return JSON.stringify(this.getPlacestore());\n    },\n    /**\n     * Adds a place. If it is the only place, it is set as starting place\n     * @param {*} id id of the place\n     * @param {*} linkId id of the corresponding link\n     * @param {*} linkedActivity course module id of linked activity\n     */\n    addPlace: function(id, linkId, linkedActivity = null) {\n        this.places.push({\n            id: id,\n            linkId: linkId,\n            linkedActivity: linkedActivity\n        });\n        if (this.places.length == 1) {\n            this.addStartingPlace(id);\n        }\n        this.id++;\n    },\n    /**\n     * Removes a place\n     * @param {*} id id of the place\n     */\n    removePlace: function(id) {\n        this.removeStartingPlace(id);\n        this.removeTargetPlace(id);\n        this.places = this.places.filter(\n            function(p) {\n                return p.id != id;\n            }\n        );\n    },\n    /**\n     * Adds a place to the array of starting places\n     * @param {*} id id of the place\n     */\n    addStartingPlace: function(id) {\n        this.startingplaces.push(id);\n    },\n    /**\n     * Removes a place from the array of starting places\n     * @param {*} id id of the place\n     */\n    removeStartingPlace: function(id) {\n        this.startingplaces = this.startingplaces.filter(\n            function(e) {\n                return e != id;\n            }\n        );\n    },\n    /**\n     * Returns whether a place is in the array of starting places\n     * @param {*} id id of the place\n     * @returns {boolean}\n     */\n    isStartingPlace: function(id) {\n        return this.startingplaces.includes(id);\n    },\n    /**\n     * Adds a place to the array of target places\n     * @param {*} id id of the place\n     */\n    addTargetPlace: function(id) {\n        this.targetplaces.push(id);\n    },\n    /**\n     * Removes a place from the array of target places\n     * @param {*} id id of the place\n     */\n    removeTargetPlace: function(id) {\n        this.targetplaces = this.targetplaces.filter(\n            function(e) {\n                return e != id;\n            }\n        );\n    },\n    /**\n     * Returns whether a place is in the array of target places\n     * @param {number} id id of the place\n     * @returns {boolean}\n     */\n    isTargetPlace: function(id) {\n        return this.targetplaces.includes(id);\n    },\n    /**\n     * Adds a path between two places\n     * @param {*} pid id of the path\n     * @param {*} fid id of the first place\n     * @param {*} sid id of the second place\n     */\n    addPath: function(pid, fid, sid) {\n        this.paths.push({\n            id: pid,\n            fid: fid,\n            sid: sid\n        });\n    },\n    /**\n     * Removes a path\n     * @param {*} id id of the place\n     */\n    removePath: function(id) {\n        this.paths = this.paths.filter(\n            function(p) {\n                return p.id != id;\n            }\n        );\n    },\n    /**\n     * Returns an array of paths touching a place\n     * @param {*} id id of the place\n     * @returns {array}\n     */\n    getTouchingPaths: function(id) {\n        return this.paths.filter(\n            function(p) {\n                return p.fid == id || p.sid == id;\n            }\n        );\n    },\n    /**\n     * Returns the course module id linked to a place\n     * @param {*} id id of the place\n     * @returns {number} id of the linked course module\n     */\n    getActivityId: function(id) {\n        let place = this.places.filter(\n            function(e) {\n                return id == e.id;\n            }\n        );\n        if (place.length > 0) {\n            return place[0].linkedActivity;\n        } else {\n            return null;\n        }\n    },\n    /**\n     * Sets the id of the linked course module\n     * @param {*} id id of the place\n     * @param {*} linkedActivity course module id\n     */\n    setActivityId: function(id, linkedActivity) {\n        let place = this.places.filter(\n            function(e) {\n                return id == e.id;\n            }\n        );\n        if (place.length > 0) {\n            place[0].linkedActivity = linkedActivity;\n        }\n    },\n    /**\n     * Sets the color of 'stroke', 'place' or 'visited'\n     * @param {*} type type of the color\n     * @param {*} color color in hex format\n     */\n    setColor: function(type, color) {\n        switch (type) {\n            case 'stroke':\n                this.strokecolor = color;\n                break;\n            case 'place':\n                this.placecolor = color;\n                break;\n            case 'visited':\n                this.visitedcolor = color;\n                break;\n        }\n    },\n    /**\n     * Gets the color of 'stroke', 'place' or 'visited'\n     * @param {*} type type of the color\n     * @returns {string} color in hex format\n     */\n    getColor: function(type) {\n        switch (type) {\n            case 'stroke':\n                return this.strokecolor;\n            case 'place':\n                return this.placecolor;\n            case 'visited':\n                return this.visitedcolor;\n        }\n        return null;\n    },\n    /**\n     * Returns the current id\n     * @returns {number}\n     */\n    getId: function() {\n        return this.id;\n    },\n    /**\n     * Sets the dimensions of the background image\n     * @param {*} width\n     * @param {*} height\n     */\n    setBackgroundDimensions: function(width, height) {\n        this.width = width;\n        this.height = height;\n    },\n    /**\n     * Returns all paths starting at a place\n     * @param {*} id id of the place\n     * @returns {array}\n     */\n    getPathsWithFid: function(id) {\n        return this.paths.filter(function(p) {\n            return p.fid == id;\n        });\n    },\n    /**\n     * Returns all paths ending at a place\n     * @param {*} id id of the place\n     * @returns {array}\n     */\n    getPathsWithSid: function(id) {\n        return this.paths.filter(function(p) {\n            return p.sid == id;\n        });\n    },\n    /**\n     * Returns the attributes of placestore\n     * @returns {object}\n     */\n    getPlacestore: function() {\n        return {\n            id: this.id,\n            places: this.places,\n            paths: this.paths,\n            startingplaces: this.startingplaces,\n            targetplaces: this.targetplaces,\n            placecolor: this.placecolor,\n            strokecolor: this.strokecolor,\n            visitedcolor: this.visitedcolor,\n            height: this.height,\n            width: this.width,\n            hidepaths: this.hidepaths,\n            mapid: this.mapid,\n            editmode: this.editmode\n        };\n    },\n    /**\n     * Sets hidepaths attribute\n     * @param {boolean} value\n     */\n    setHidePaths: function(value) {\n        this.hidepaths = value;\n    },\n    /**\n     * Returns the value of hidepaths attribute\n     * @returns {boolean}\n     */\n    getHidePaths: function() {\n        return this.hidepaths;\n    },\n    /**\n     * Returns the mapid\n     * @returns {string}\n     */\n    getMapid: function() {\n        return this.mapid;\n    }\n};\n\nexport default placestore;"],"file":"placestore.min.js"}