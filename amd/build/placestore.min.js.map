{"version":3,"sources":["../src/placestore.js"],"names":["version","id","places","paths","startingplaces","targetplaces","placecolor","strokecolor","visitedcolor","height","width","hidepaths","mapid","editmode","loadJSON","json","fromjson","JSON","parse","Object","assign","buildJSON","stringify","getPlacestore","addPlace","linkId","linkedActivity","push","length","addStartingPlace","removePlace","removeStartingPlace","removeTargetPlace","filter","p","e","isStartingPlace","includes","addTargetPlace","isTargetPlace","addPath","pid","fid","sid","removePath","getTouchingPaths","getActivityId","place","setActivityId","setColor","type","color","getColor","getId","setBackgroundDimensions","getPathsWithFid","getPathsWithSid","setHidePaths","value","getHidePaths","getMapid"],"mappings":"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","sourcesContent":["let placestore = {\n    version: 2011120201,\n    id: 0,\n    places: [],\n    paths: [],\n    startingplaces: [],\n    targetplaces: [],\n    placecolor: '#c01c28',\n    strokecolor: '#ffffff',\n    visitedcolor: '#26a269',\n    height: 100,\n    width: 800,\n    hidepaths: false,\n    mapid: '',\n    editmode: true,\n    /**\n     * Loads attributes from JSON into placestore\n     * @param {*} json\n     */\n    loadJSON: function(json) {\n        try {\n            let fromjson = JSON.parse(json);\n            Object.assign(this, fromjson);\n            // eslint-disable-next-line no-empty\n        } catch { }\n    },\n    /**\n     * Returns placestore as a JSON string ()\n     * @returns {string}\n     */\n    buildJSON: function() {\n        return JSON.stringify(this.getPlacestore());\n    },\n    /**\n     * Adds a place. If it is the only place, it is set as starting place\n     * @param {*} id id of the place\n     * @param {*} linkId id of the corresponding link\n     * @param {*} linkedActivity course module id of linked activity\n     */\n    addPlace: function(id, linkId, linkedActivity = null) {\n        this.places.push({\n            id: id,\n            linkId: linkId,\n            linkedActivity: linkedActivity\n        });\n        if (this.places.length == 1) {\n            this.addStartingPlace(id);\n        }\n        this.id++;\n    },\n    /**\n     * Removes a place\n     * @param {*} id id of the place\n     */\n    removePlace: function(id) {\n        this.removeStartingPlace(id);\n        this.removeTargetPlace(id);\n        this.places = this.places.filter(\n            function(p) {\n                return p.id != id;\n            }\n        );\n    },\n    /**\n     * Adds a place to the array of starting places\n     * @param {*} id id of the place\n     */\n    addStartingPlace: function(id) {\n        this.startingplaces.push(id);\n    },\n    /**\n     * Removes a place from the array of starting places\n     * @param {*} id id of the place\n     */\n    removeStartingPlace: function(id) {\n        this.startingplaces = this.startingplaces.filter(\n            function(e) {\n                return e != id;\n            }\n        );\n    },\n    /**\n     * Returns whether a place is in the array of starting places\n     * @param {*} id id of the place\n     * @returns {boolean}\n     */\n    isStartingPlace: function(id) {\n        return this.startingplaces.includes(id);\n    },\n    /**\n     * Adds a place to the array of target places\n     * @param {*} id id of the place\n     */\n    addTargetPlace: function(id) {\n        this.targetplaces.push(id);\n    },\n    /**\n     * Removes a place from the array of target places\n     * @param {*} id id of the place\n     */\n    removeTargetPlace: function(id) {\n        this.targetplaces = this.targetplaces.filter(\n            function(e) {\n                return e != id;\n            }\n        );\n    },\n    /**\n     * Returns whether a place is in the array of target places\n     * @param {number} id id of the place\n     * @returns {boolean}\n     */\n    isTargetPlace: function(id) {\n        return this.targetplaces.includes(id);\n    },\n    /**\n     * Adds a path between two places\n     * @param {*} pid id of the path\n     * @param {*} fid id of the first place\n     * @param {*} sid id of the second place\n     */\n    addPath: function(pid, fid, sid) {\n        this.paths.push({\n            id: pid,\n            fid: fid,\n            sid: sid\n        });\n    },\n    /**\n     * Removes a path\n     * @param {*} id id of the place\n     */\n    removePath: function(id) {\n        this.paths = this.paths.filter(\n            function(p) {\n                return p.id != id;\n            }\n        );\n    },\n    /**\n     * Returns an array of paths touching a place\n     * @param {*} id id of the place\n     * @returns {array}\n     */\n    getTouchingPaths: function(id) {\n        return this.paths.filter(\n            function(p) {\n                return p.fid == id || p.sid == id;\n            }\n        );\n    },\n    /**\n     * Returns the course module id linked to a place\n     * @param {*} id id of the place\n     * @returns {number} id of the linked course module\n     */\n    getActivityId: function(id) {\n        let place = this.places.filter(\n            function(e) {\n                return id == e.id;\n            }\n        );\n        if (place.length > 0) {\n            return place[0].linkedActivity;\n        } else {\n            return null;\n        }\n    },\n    /**\n     * Sets the id of the linked course module\n     * @param {*} id id of the place\n     * @param {*} linkedActivity course module id\n     */\n    setActivityId: function(id, linkedActivity) {\n        let place = this.places.filter(\n            function(e) {\n                return id == e.id;\n            }\n        );\n        if (place.length > 0) {\n            place[0].linkedActivity = linkedActivity;\n        }\n    },\n    /**\n     * Sets the color of 'stroke', 'place' or 'visited'\n     * @param {*} type type of the color\n     * @param {*} color color in hex format\n     */\n    setColor: function(type, color) {\n        switch (type) {\n            case 'stroke':\n                this.strokecolor = color;\n                break;\n            case 'place':\n                this.placecolor = color;\n                break;\n            case 'visited':\n                this.visitedcolor = color;\n                break;\n        }\n    },\n    /**\n     * Gets the color of 'stroke', 'place' or 'visited'\n     * @param {*} type type of the color\n     * @returns {string} color in hex format\n     */\n    getColor: function(type) {\n        switch (type) {\n            case 'stroke':\n                return this.strokecolor;\n            case 'place':\n                return this.placecolor;\n            case 'visited':\n                return this.visitedcolor;\n        }\n        return null;\n    },\n    /**\n     * Returns the current id\n     * @returns {number}\n     */\n    getId: function() {\n        return this.id;\n    },\n    /**\n     * Sets the dimensions of the background image\n     * @param {*} width\n     * @param {*} height\n     */\n    setBackgroundDimensions: function(width, height) {\n        this.width = width;\n        this.height = height;\n    },\n    /**\n     * Returns all paths starting at a place\n     * @param {*} id id of the place\n     * @returns {array}\n     */\n    getPathsWithFid: function(id) {\n        return this.paths.filter(function(p) {\n            return p.fid == id;\n        });\n    },\n    /**\n     * Returns all paths ending at a place\n     * @param {*} id id of the place\n     * @returns {array}\n     */\n    getPathsWithSid: function(id) {\n        return this.paths.filter(function(p) {\n            return p.sid == id;\n        });\n    },\n    /**\n     * Returns the attributes of placestore\n     * @returns {object}\n     */\n    getPlacestore: function() {\n        return {\n            id: this.id,\n            places: this.places,\n            paths: this.paths,\n            startingplaces: this.startingplaces,\n            targetplaces: this.targetplaces,\n            placecolor: this.placecolor,\n            strokecolor: this.strokecolor,\n            visitedcolor: this.visitedcolor,\n            height: this.height,\n            width: this.width,\n            hidepaths: this.hidepaths,\n            mapid: this.mapid,\n            editmode: this.editmode\n        };\n    },\n    /**\n     * Sets hidepaths attribute\n     * @param {boolean} value\n     */\n    setHidePaths: function(value) {\n        this.hidepaths = value;\n    },\n    /**\n     * Returns the value of hidepaths attribute\n     * @returns {boolean}\n     */\n    getHidePaths: function() {\n        return this.hidepaths;\n    },\n    /**\n     * Returns the mapid\n     * @returns {string}\n     */\n    getMapid: function() {\n        return this.mapid;\n    }\n};\n\nexport default placestore;"],"file":"placestore.min.js"}